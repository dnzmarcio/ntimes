% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glm_regression.R
\name{nt_multiple_glm}
\alias{nt_multiple_glm}
\title{Multivariable Generalized Linear models}
\usage{
nt_multiple_glm(
  fit,
  exponentiate = FALSE,
  ci_type = "Wald",
  contrast.qt = "one-unit",
  user.contrast = NULL,
  user.contrast.interaction = NULL,
  table.reference = TRUE,
  format = TRUE,
  labels = NULL,
  digits = 2,
  digits_p = 3,
  save = FALSE,
  file = "nt_multiple_glm"
)
}
\arguments{
\item{fit}{a glm object.}

\item{exponentiate}{a logical value indicating whether coefficients should be exponentiated.}

\item{ci_type}{a character value indicating the procedure to calculate confidence intervals: likelihood ratio (\code{profile}) or wald (\code{wald}).}

\item{contrast.qt}{a character indicating whether the contrast for quantitative covariates. Options are every one-unit of change (\code{one-unit}), quartiles (\code{quartiles}) or provided by the user (\code{user}).}

\item{user.contrast}{a variable named list of numerical vectors indicating contrast for a covariate.}

\item{user.contrast.interaction}{a variable named list of numerical vectors indicating a contrast for interaction.}

\item{table.reference}{a logical value indicating whether the output should be presented with a line indicating the reference category.}

\item{format}{a logical value indicating whether the output should be formatted.}

\item{labels}{a list of labels with components given by their variable names.}

\item{digits}{a numerical value defining of digits to present the results.}

\item{digits_p}{a numerical value defining number of digits to present the p-values.}

\item{save}{a logical value indicating whether the output should be saved as a csv file.}

\item{file}{a character indicating the name of output file in csv format to be saved.}
}
\description{
Tabulating results from multivariable GLMs.
}
\examples{
library(titanic)
library(dplyr)

data(titanic_train)
dt <- titanic_train |> mutate(Sex = factor(Sex,
                                           levels = c("male", "female"),
                                           labels = c("Male", "Female")),
                              Pclass = factor(Pclass,
                                              levels = 1:3,
                                              labels = c("I", "II", "III"))
                              )

fit <- glm(Survived ~ Age + Sex + Pclass, data = dt, family = "binomial")

nt_multiple_glm(fit, exponentiate = TRUE)

}
